version: '2'

services:
  php7:
    build:
      context: ./php7
      args:
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
    container_name: php7
    restart: always
    volumes:
      - ../:/var/www/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - ./docker-php-memlimit.ini:/usr/local/etc/php/conf.d/docker-php-memlimit.ini
      - ./openssl.cnf:/etc/ssl/openssl.cnf
    networks:
      - docker-net
    tty: true

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
      - "6001:6001"
    volumes:
      - ../:/var/www/
      - ./nginx/sites/:/etc/nginx/conf.d/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - docker-net
    depends_on:
      - php8

  mysql:
    image: mysql:5.7
    command: mysqld --sql_mode=""
    container_name: mysql
    restart: always
    tty: true
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ${DATA_LIB}/data/mysql:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - 3306:3306
    networks:
      - docker-net

  php8:
    build:
      context: ./php8
      args:
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
    container_name: php8
    restart: always
    volumes:
      - ../:/var/www/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - ./docker-php-memlimit.ini:/usr/local/etc/php/conf.d/docker-php-memlimit.ini
      - ./openssl.cnf:/etc/ssl/openssl.cnf
    networks:
      - docker-net
    tty: true
      
  caddy:
    build: ./caddy
    container_name: caddy
    volumes:
      - ../:/var/www
      - ./caddy/caddy:/etc/caddy
      - .logs/caddy:/var/log/caddy
    ports:
      - "8181:8181"
      - "443:443"
    networks:
      - docker-net
    restart: always
    tty: true  

networks: 
  docker-net:
    driver: bridge

