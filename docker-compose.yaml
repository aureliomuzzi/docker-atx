services:

  nginx:
    build: ./nginx
    container_name: nginx
    restart: no # always
    tty: true
    ports:
      - "80:80"
      - "6001:6001"
    volumes:
      - ../:/var/www/
      - ./nginx/sites/:/etc/nginx/conf.d/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - docker-net
    depends_on:
      - php74
      - php83

  php74:
    build:
      context: ./php7.4
      args:
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
    container_name: php_7.4
    restart: no # always
    volumes:
      - ../:/var/www/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - ./docker-php-memlimit.ini:/usr/local/etc/php/conf.d/docker-php-memlimit.ini
      - ./openssl.cnf:/etc/ssl/openssl.cnf
      - ./custom.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - docker-net
    tty: true
    depends_on:
      - mariadb
      - redis

  php83:
    build:
      context: ./php8.3
      args:
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
    container_name: php_8.3
    restart: no # always
    volumes:
      - ../:/var/www/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - ./docker-php-memlimit.ini:/usr/local/etc/php/conf.d/docker-php-memlimit.ini
      - ./openssl.cnf:/etc/ssl/openssl.cnf
      - ./custom.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - docker-net
    tty: true
    depends_on:
      - mariadb
      - redis

  mariadb:
    image: mariadb:10.2.44
    container_name: mariadb
    restart: no # always
    ports:
      - 3306:3306
    environment:
      MARIADB_DATABASE: "atxsales_local"
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: "yes"
    command: --sql-mode="NO_ENGINE_SUBSTITUTION"
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 3s
      timeout: 2s
      retries: 5
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - atxsales_mariadb:/var/lib/mysql
    networks:
      - docker-net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: no # always
    ports:
      - 8001:80
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_USER: "root"
      PMA_PASSWORD: ""
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: "yes"
    volumes:
      - ./phpmyadmin/sessions:/var/lib/php/sessions
    networks:
      - docker-net
  
  postgres:
    build: ./postgres
    container_name: postgres
    restart: no # always
    tty: true
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_LIB}/data/postgres:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - 5432:5432
    networks:
      - docker-net

  redis :
    image: redislabs/rejson:latest
    container_name: redis
    restart: no # always
    expose:
      - 6379
    networks:
      - docker-net

  n8n:
      image: n8nio/n8n
      container_name: n8n
      ports:
        - "5678:5678"
      volumes:
        - ~/.n8n:/home/node/.n8n
      restart: no # unless-stopped
      expose:
        - "8080"  # Porta interna para comunicação entre containers
      networks:
        - docker-net

  evolution:
    image: atendai/evolution-api:v2.1.1
    container_name: evolution_api
    restart: no # always
    ports:
      - 8080:8080
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    environment:
      - SERVER_URL=http://localhost:8080
      - DOCKER_ENV=true
      - LOG_LEVEL=ERROR,WARN,DEBUG,INFO,LOG,VERBOSE,DARK,WEBHOOKS
      - DEL_INSTANCE=false
      - CONFIG_SESSION_PHONE_CLIENT=Evolution
      - CONFIG_SESSION_PHONE_NAME=Chrome
      - STORE_MESSAGES=true
      - STORE_MESSAGE_UP=true
      - STORE_CONTACTS=true
      - STORE_CHATS=true
      - CLEAN_STORE_CLEANING_INTERVAL=7200
      - CLEAN_STORE_MESSAGES=true
      - CLEAN_STORE_MESSAGE_UP=true
      - CLEAN_STORE_CONTACTS=true
      - CLEAN_STORE_CHATS=true
      - AUTHENTICATION_TYPE=apikey
      - AUTHENTICATION_API_KEY=0417bf43b0a8969bd6685bcb49d783df
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
      - QRCODE_LIMIT=30
      - WEBHOOK_GLOBAL_ENABLED=false
      - WEBHOOK_GLOBAL_URL=http://localhost:8080
      - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=false
      - WEBHOOK_EVENTS_APPLICATION_STARTUP=false
      - WEBHOOK_EVENTS_QRCODE_UPDATED=true
      - WEBHOOK_EVENTS_MESSAGES_SET=false
      - WEBHOOK_EVENTS_MESSAGES_UPSERT=true
      - WEBHOOK_EVENTS_MESSAGES_UPDATE=true
      - WEBHOOK_EVENTS_CONTACTS_SET=true
      - WEBHOOK_EVENTS_CONTACTS_UPSERT=true
      - WEBHOOK_EVENTS_CONTACTS_UPDATE=true
      - WEBHOOK_EVENTS_PRESENCE_UPDATE=true
      - WEBHOOK_EVENTS_CHATS_SET=true
      - WEBHOOK_EVENTS_CHATS_UPSERT=true
      - WEBHOOK_EVENTS_CHATS_UPDATE=true
      - WEBHOOK_EVENTS_CHATS_DELETE=true
      - WEBHOOK_EVENTS_GROUPS_UPSERT=true
      - WEBHOOK_EVENTS_GROUPS_UPDATE=true
      - WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE=true
      - WEBHOOK_EVENTS_CONNECTION_UPDATE=true
      - CACHE_REDIS_ENABLED=false
      - CACHE_REDIS_URI=redis://localhost:6379/6
      - CACHE_REDIS_PREFIX_KEY=evolution
      - CACHE_REDIS_SAVE_INSTANCES=false
      - CACHE_LOCAL_ENABLED=false
      # Aivar Banco de Dados
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=mysql
      - DATABASE_CONNECTION_URI=mysql://root:@mariadb:3306/evolution_db
      - DATABASE_CONNECTION_DB_PREFIX_NAME=evo
      # Escolha o que deseja salvar
      - DATABASE_SAVE_DATA_INSTANCE=true
      - DATABASE_SAVE_DATA_NEW_MESSAGE=false
      - DATABASE_SAVE_MESSAGE_UPDATE=false
      - DATABASE_SAVE_DATA_CONTACTS=false
      - DATABASE_SAVE_DATA_CHATS=false
    command: ['node', './dist/src/main.js']
    expose:
      - 8081 # Porta interna para comunicação entre containers
    networks:
      - docker-net

networks: 
  docker-net:
    driver: bridge

volumes:
  atxsales_mariadb:
  evolution_instances:
  evolution_store:

